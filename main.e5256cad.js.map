{"version":3,"file":"main.e5256cad.js","mappings":"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","sources":["webpack://rte/./src/App.style.scss?4132","webpack://rte/./src/App.tsx","webpack://rte/./src/components/InputField/InputFIeld.style.sass?c381","webpack://rte/./src/components/InputField/InputField.tsx","webpack://rte/./src/components/InputField/index.ts","webpack://rte/./src/cypher.ts","webpack://rte/./src/index.tsx","webpack://rte/./src/utils/react.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import './App.style.scss'\nimport { InputField } from \"@components/InputField\"\nimport { getIndex, getMod } from \"./cypher\"\nimport { useStorage } from '@utils/react'\n\nexport function App() {\n    const input = useStorage('')\n    const mod = getMod(input.value.split(' ')[0].trimEnd())\n\n    const indexes = (() => {\n        const arr: number[] = []\n        if (mod == null || !input.value) return arr\n\n        for (let i = 0; (arr[arr.length - 1] ?? 0) < input.value.length + 100; i++) {\n            const index = getIndex(mod, i)\n            const previous = arr[arr.length - 1] ?? 0\n\n            arr.push(index + previous)\n        }\n\n        return arr\n    })()\n\n    return (\n        <div className=\"container\">\n            <InputField\n                value={input.value}\n                onChange={input.set}\n                indexes={indexes}\n            />\n\n            <div className=\"output\">\n                {indexes.map((v) => input.value[v])}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport {};","import { ClipboardEvent, FormEvent, ReactNode, useMemo } from \"react\"\nimport './InputFIeld.style.sass'\n\ninterface InputFieldProps {\n    value: string\n    onChange: (value: string) => void\n    indexes: number[]\n}\n\nexport function InputField({value, onChange, indexes}: InputFieldProps) {\n    const onInput = (e: FormEvent<HTMLDivElement>) => {\n        const target = e.target as HTMLDivElement\n        onChange(target.outerText)\n    }\n\n    const onPaste = (e: ClipboardEvent<HTMLDivElement>) => {\n        e.preventDefault()\n\n        const target = e.target as HTMLDivElement\n        const text = e.clipboardData.getData(\"text/plain\")\n\n        target.innerText = text\n        onChange(text)\n    }\n\n    const letters = useMemo(() => {\n        const lastIndex = indexes[indexes.length -1]\n        if (!lastIndex) return []\n\n        const arr: ReactNode[] = []\n        const lt = value.split('')\n\n        for (let i = 0; i <= lastIndex; i++) {\n            const currentLt = lt[i]\n            const props = {\n                key: i,\n                className: indexes.includes(i) ? 'tt' : ''\n            }\n\n            switch (currentLt) {\n                case '\\n': arr.push(<br {...props} />); break\n                default: arr.push(<span {...props}>a</span>); break\n            }\n        }\n\n        return arr\n    }, [value, indexes])\n\n    return (\n        <div className=\"input-container\">\n            <div\n                className=\"input-field\"\n                onInput={onInput}\n                onPaste={onPaste}\n                contentEditable\n                spellCheck={false}\n            />\n\n            <div className=\"overlay\">\n                {letters}\n            </div>\n        </div>\n    )\n}","export * from './InputField'","export function getMod(word: string) {\n    const sum = [...word].reduce((acc, v) => {\n        acc += v.codePointAt(0)!\n        return acc\n    }, 0)\n\n    return Math.log(sum) * sum >>> 0 << 2\n}\n\nexport function getIndex(mod: number, index: number) {\n    const a = mod + (index + 1) >>> 0|0\n    const b = a << Math.PI >>> 0|0\n    const c = a >> b >> 9 >>> 0|0\n    const final = String(a + b + c)\n\n    const num = Number(final[final.length - 1])\n    return num|1\n}","import { createRoot } from 'react-dom/client';\nimport { App } from \"./App\";\n\nconst container = document.getElementById(\"root\")!\nconst root = createRoot(container)\n\nroot.render(<App />)","import { Dispatch, SetStateAction, useState } from \"react\"\n\nexport interface UseState<T> {\n    value: T\n    set: Dispatch<SetStateAction<T>>\n}\n\nexport function useStorage <T>(value: T): UseState<T> {\n    const [state, setState] = useState(value)\n    return { value: state, set: setState }\n}"],"names":["InputField","getIndex","getMod","useStorage","App","input","mod","value","split","trimEnd","indexes","arr","i","length","index","previous","push","div","className","onChange","set","map","v","useMemo","onInput","e","target","outerText","onPaste","preventDefault","text","clipboardData","getData","innerText","letters","lastIndex","lt","currentLt","props","key","includes","br","span","contentEditable","spellCheck","word","sum","reduce","acc","codePointAt","Math","log","a","b","PI","c","final","String","num","Number","createRoot","container","document","getElementById","root","render","useState","state","setState"],"sourceRoot":""}